services:
  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    networks:
      - reg-net
    ports:
      - "8000:80"
    depends_on:
      - db
    volumes:
      - .:/var/www/public
      - regmon_lib_vendor_data:/var/www/public/vendor/
      - regmon_lib_node_data:/var/www/public/node_modules/
      - ./cfg/php.${STAGE}.ini:/usr/local/etc/php/php.ini
      # uncomment in order to have a local copy of the apache error.log 
      # warning: you need first to create the file __docker_error.log 
      # - ./__docker_error.log:/var/log/apache2/error.log
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_pw
      XDEBUG_MODE: develop, debug
      XDEBUG_CONFIG:
        client_host=host.docker.internal 
        client_port=9003
        start_with_request=yes
      STAGE: ${STAGE}
    secrets:
      - mysql_pw

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    networks:
      - reg-net
    ports:
      - 8888:80
    depends_on:
      - db
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_pw 
      PMA_HOST: ${MYSQL_HOST}
    secrets:
      - mysql_root_pw

  db:
    image: mysql:latest
    networks:
      - reg-net
    ports:
      - "6603:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE} 
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_pw
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_pw 
    secrets:
      - mysql_pw
      - mysql_root_pw

volumes:
  mysql_data:
    driver: local
  regmon_lib_vendor_data:
    external: true
  regmon_lib_node_data:
    external: true

networks:
  reg-net:
    driver: bridge

secrets:
  mysql_pw:
    file: ./secrets/mysql_pw.txt
  mysql_root_pw:
    file: ./secrets/mysql_root_pw.txt